# name: weekly-report

# on:
#   schedule:
#     - cron: '*/1 * * * *'
#   workflow_dispatch:

# jobs:
#   build:
#     runs-on: ubuntu-latest
#     steps:

#       - uses: actions/checkout@v2
#       - uses: actions/setup-python@v2
#         with:
#           python-version: 3.x

#       - name: Install dependencies
#         run: pip install requests pytz pandas python-dotenv

#       - name: Set up SQLite database
#         run: touch $GITHUB_WORKSPACE/journal_emails.db

#       - name: Run email code
#         env:
#           EMAIL_USER: ${{ secrets.EMAIL_USER }}
#           EMAIL_PASS: ${{ secrets.EMAIL_PASS }}
#           SPRINGER_API_KEY: ${{ secrets.SPRINGER_API_KEY }}
#         run: python journal.py

#       - name: Upload database file
#         uses: actions/upload-artifact@v2
#         with:
#           name: Database
#           path: journal_emails.db

#       - name: Upload log file
#         uses: actions/upload-artifact@v2
#         with:
#           name: Log
#           path: journal.log

#       - name: Set up PAT
#         run: echo "GH_PAT=${{ secrets.GH_PAT }}" >> $GITHUB_ENV


#       - name: Commit and push changes
#         run: |
#           git config user.email github-actions[bot]@users.noreply.github.com
#           git config user.name github-actions[bot]
#           git add .
#           git commit -m "Update database and log files"
#           git push https://${GH_PAT}@github.com/naveenrk7/journal_automation.git


name: weekly-report

on:
  schedule:
    - cron: '*/1 * * * *'
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        with:
          python-version: 3.x

      - name: Install dependencies
        run: pip install requests pytz pandas python-dotenv

      - name: Set up SQLite database
        run: touch $GITHUB_WORKSPACE/journal_emails.db

      - name: Run email code
        env:
          EMAIL_USER: ${{ secrets.EMAIL_USER }}
          EMAIL_PASS: ${{ secrets.EMAIL_PASS }}
          SPRINGER_API_KEY: ${{ secrets.SPRINGER_API_KEY }}
        run: python journal.py

      - name: Upload database file
        uses: actions/upload-artifact@v2
        with:
          name: Database
          path: journal_emails.db

      - name: Upload log file
        uses: actions/upload-artifact@v2
        with:
          name: Log
          path: journal.log

      - name: Commit changes
        run: |
          git config user.email github-actions[bot]@users.noreply.github.com
          git config user.name github-actions[bot]
          git add .
          git commit -m "Update database and log files"

      - name: Push changes
        run: |
          curl -X POST \
            -H "Authorization: token ${{ secrets.PAT }}" \
            -H "Accept: application/vnd.github.v3+json" \
            "https://api.github.com/repos/naveenrk7/journal_automation/git/refs/heads/${{ github.ref }}/update" \
            -d '{
              "sha": "'"$GITHUB_SHA"'",
              "force": true
            }'




# name: weekly-report

# on:
#   schedule:
#     - cron: '*/1 * * * *'
#   workflow_dispatch:

# jobs:
#   build:
#     runs-on: ubuntu-latest
#     permissions:
#       pull-requests: write
#       issues: write
#       repository-projects: write
#       contents: write

#     steps:
#       - uses: actions/checkout@v2
#       - uses: actions/setup-python@v2
#         with:
#           python-version: 3.x
# <<<<<<< HEAD
# =======

# >>>>>>> 51c8b0905573b91bf3aaaf998815370295c6a5a5

#       - name: Install dependencies
#         run: pip install requests pytz pandas python-dotenv

#       - name: Set up SQLite database
#         run: touch $GITHUB_WORKSPACE/journal_emails.db

#       - name: Run email code
#         env:
#           EMAIL_USER: ${{ secrets.EMAIL_USER }}
#           EMAIL_PASS: ${{ secrets.EMAIL_PASS }}
#           SPRINGER_API_KEY: ${{ secrets.SPRINGER_API_KEY }}
#         run: python journal.py

#       - name: Copy database file
#         run: |
#           if [[ ! -f "$GITHUB_WORKSPACE/journal_emails.db" ]]; then
#             cp journal_emails.db $GITHUB_WORKSPACE/journal_emails.db
#           fi

#       - name: Copy log file
#         run: |
#           if [[ ! -f "$GITHUB_WORKSPACE/journal.log" ]]; then
#             cp journal.log $GITHUB_WORKSPACE/journal.log
#           fi

#       - name: Commit files
#         run: |
#           git config --local user.email "action@github.com"
#           git config --local user.name "GitHub Action"
#           git add -A
#           git diff-index --quiet HEAD || (git commit -a -m "Updated logs" --allow-empty)

#       - name: Push changes
#         uses: ad-m/github-push-action@v0.6.0
#         with:
#           github_token: ${{ secrets.GITHUB_TOKEN }}
#           branch: master
